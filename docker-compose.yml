version: '3.4'

x-service-restart-policy: &service-restart-policy
  restart_policy:
    condition: on-failure
    delay: 60s
    window: 100s

services:
  postgres.sockets:
    image: ${DOCKER_REGISTRY-}postgres-sockets.api
    build:
      context: .
      dockerfile: src/Postgres.Sockets/Dockerfile
    ports:
      - "5077:5077"
      - "7143:7143"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:7143;http://+:5077
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    volumes:
      - ./:/https:ro
    depends_on: 
      postgres-db:
        condition: service_healthy
        restart: true
    deploy:
      <<: *service-restart-policy
        
  postgres-db:
    image: "postgres"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=APIDB
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpassword
    volumes:
      - pgdata:/var/lib/postgresql/data
    deploy:
      <<: *service-restart-policy
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 10s
      retries: 60
      start_period: 0s
            
volumes:
  pgdata: